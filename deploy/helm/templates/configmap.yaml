apiVersion: v1
kind: ConfigMap
metadata:
  name: { { include "mongobouncer.configName" . } }
  labels: { { - include "mongobouncer.labels" . | nindent 4 } }
data:
  mongobouncer.toml: |
    # MongoBouncer Configuration File
    # Generated by Helm Chart

    [mongobouncer]
    # =====================================
    # Network & Server Settings
    # =====================================
    listen_addr = "{{ .Values.app.config.listenAddr }}"
    listen_port = {{ .Values.app.config.listenPort }}

    # =====================================
    # Logging & Debugging
    # =====================================
    log_level = "{{ .Values.app.config.logLevel }}"
    {{- if .Values.app.config.logfile }}
    logfile = "{{ .Values.app.config.logfile }}"
    {{- else }}
    logfile = ""
    {{- end }}

    # =====================================
    # Connection Pooling & Performance
    # =====================================
    pool_mode = "{{ .Values.app.config.poolMode }}"
    max_pool_size = {{ .Values.app.config.maxPoolSize }}
    min_pool_size = {{ .Values.app.config.minPoolSize }}
    max_client_conn = {{ .Values.app.config.maxClientConn }}
    max_conn_idle_time = "{{ .Values.app.config.maxConnIdleTime }}"
    server_selection_timeout = "{{ .Values.app.config.serverSelectionTimeout }}"
    connect_timeout = "{{ .Values.app.config.connectTimeout }}"
    socket_timeout = "{{ .Values.app.config.socketTimeout }}"
    heartbeat_interval = "{{ .Values.app.config.heartbeatInterval }}"
    retry_writes = {{ .Values.app.config.retryWrites }}
    auth_enabled = {{ .Values.app.config.authEnabled }}
    regex_credential_passthrough = {{ .Values.app.config.regexCredentialPassthrough }}
    topology = "{{ .Values.app.config.topology }}"
    ping = {{ .Values.app.config.ping }}

    # =====================================
    # Distributed Cache Configuration
    # =====================================
    {{- if .Values.app.config.sharedCache.enabled }}
    [mongobouncer.shared_cache]
    enabled = {{ .Values.app.config.sharedCache.enabled }}
    listen_addr = "{{ .Values.app.config.sharedCache.listenAddr }}"
    listen_port = {{ .Values.app.config.sharedCache.listenPort }}
    cache_size_bytes = "{{ .Values.app.config.sharedCache.cacheSizeBytes }}"
    session_expiry = "{{ .Values.app.config.sharedCache.sessionExpiry }}"
    transaction_expiry = "{{ .Values.app.config.sharedCache.transactionExpiry }}"
    cursor_expiry = "{{ .Values.app.config.sharedCache.cursorExpiry }}"
    debug = {{ .Values.app.config.sharedCache.debug }}
    label_selector = "app.kubernetes.io/name={{ include "mongobouncer.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
    {{- if .Values.app.config.sharedCache.peerUrls }}
    peer_urls = [
        {{- range $i, $url := .Values.app.config.sharedCache.peerUrls }}
        "{{ $url }}"{{ if ne $i (sub (len $.Values.app.config.sharedCache.peerUrls) 1) }},{{ end }}
        {{- end }}
    ]
    {{- end }}
    {{- end }}

    # =====================================
    # Metrics & Monitoring (Prometheus)
    # =====================================
    {{- if .Values.app.config.metrics.enabled }}
    [mongobouncer.metrics]
    enabled = {{ .Values.app.config.metrics.enabled }}
    listen_addr = "{{ .Values.app.config.metrics.listenAddr }}"
    listen_port = {{ .Values.app.config.metrics.listenPort }}
    {{- else }}
    [mongobouncer.metrics]
    enabled = false
    {{- end }}

    # =====================================
    # Network Settings
    # =====================================
    network = "{{ .Values.app.config.network }}"
    unlink = {{ .Values.app.config.unlink }}

    # =====================================
    # Database Configurations
    # =====================================
    {{- if .Values.app.databases }}
      {{- range $key, $db := .Values.app.databases }}
    [databases."{{ $key }}"]
        {{- if $db.connectionString }}
    connection_string = "{{ $db.connectionString }}"
        {{- end }}
        {{- if $db.host }}
    host = "{{ $db.host }}"
        {{- end }}
        {{- if $db.port }}
    port = {{ $db.port }}
        {{- end }}
        {{- if $db.dbname }}
    dbname = "{{ $db.dbname }}"
        {{- end }}
        {{- if $db.user }}
    user = "{{ $db.user }}"
        {{- end }}
        {{- if $db.password }}
    password = "{{ $db.password }}"
        {{- end }}
        {{- if $db.maxPoolSize }}
    max_pool_size = {{ $db.maxPoolSize }}
        {{- end }}
        {{- if $db.minPoolSize }}
    min_pool_size = {{ $db.minPoolSize }}
        {{- end }}
        {{- if $db.socketTimeout }}
    socket_timeout = "{{ $db.socketTimeout }}"
        {{- end }}
        {{- if $db.poolMode }}
    pool_mode = "{{ $db.poolMode }}"
        {{- end }}
      {{- end }}
    {{- end }}
