# MongoBouncer Configuration File
# MongoDB Connection Bouncer - pgBouncer equivalent for MongoDB
# This configuration provides comprehensive settings for production deployments

[mongobouncer]
# =====================================
# Network & Server Settings
# =====================================
listen_addr = "0.0.0.0"
listen_port = 27017

# =====================================
# Logging & Debugging
# =====================================
log_level = "info" # debug, info, warn, error
logfile = ""       # Empty means stdout, or specify path: "/var/log/mongobouncer.log"

# =====================================
# Connection Pooling & Performance
# =====================================
pool_mode = "statement"                # session, transaction, statement
max_pool_size = 10                     # MongoDB driver's internal pool size
min_pool_size = 1                      # MongoDB driver's minimum pool size
max_client_conn = 100                  # Maximum client connections (0 = unlimited)
max_conn_idle_time = "30s"             # How long to keep idle connections
server_selection_timeout = "5s"        # Server selection timeout
connect_timeout = "5s"                 # Connection establishment timeout
socket_timeout = "30s"                 # Socket operation timeout
heartbeat_interval = "10s"             # Heartbeat frequency
auth_enabled = true                    # Enable authentication on the proxy level
regex_credential_passthrough = true    # Use credentials passed in appName as well as the passed authSource for regex matched/wildcard match databases in downstream connections
ping = true

# =====================================
# Metrics & Monitoring (Prometheus)
# =====================================
metrics_address = "localhost:9090"
metrics_enabled = true

# =====================================
# Network Settings
# =====================================
network = "tcp4" # tcp4, tcp6, unix
unlink = false   # Remove unix socket file on exit

# =====================================
# Database Configurations
# =====================================
[databases]
# Multiple configuration formats supported:
# 1. Structured format with connection_string (PREFERRED)
#    - Full MongoDB URI support (replica sets, SSL, auth, etc.)
#    - Environment variables: ${USER}:${PASS}@host
#    - Complex configurations (sharded clusters, Atlas)
# 2. Individual parameter settings (host, port, dbname, etc.)
#    - Simple configurations for basic setups
#    - Clear separation of connection vs. pool settings
#    - No connection_string field needed
# 3. Environment variable substitution

# Example 1: Production MongoDB Atlas cluster (connection string)
production_app = { connection_string = "mongodb+srv://${PROD_USER}:${PROD_PASS}@production-cluster.mongodb.net/myapp?retryWrites=true&w=majority&maxPoolSize=100&minPoolSize=10" }

# Example 2: Analytics database (individual settings)
[databases.analytics_db]
connection_string = "mongodb://analytics-cluster.mongodb.net:27017/analytics"
max_pool_size = 50                                                            # Override default for high-traffic database
min_pool_size = 10                                                            # Override default
socket_timeout = "60s"                                                        # Longer timeout for this DB

# Example 3: Local development database (using individual fields)
[databases.local_dev]
host = "localhost"
port = 27017
dbname = "development"
max_pool_size = 10
min_pool_size = 2

# Example 3b: Another database using individual fields (no connection_string needed)
[databases.test_db]
host = "localhost"
port = 27019
dbname = "test_database"
user = "testuser"
password = "testpass"
max_pool_size = 15
min_pool_size = 5
socket_timeout = "60s"

# Example 5: Wildcard database patterns (using quotes for special characters)
[databases."analytics_*"]
connection_string = "mongodb://analytics-cluster.mongodb.net:27017/analytics"
max_pool_size = 30
pool_mode = "statement"

# Catch-all wildcard: matches any database not matched above
[databases."*"]
connection_string = "mongodb://${DEFAULT_MONGO_HOST:-localhost}:27017/default"
max_pool_size = 20
max_db_connections = 40

# =====================================
# Environment Variable Examples
# =====================================
# Set these environment variables before starting mongobouncer:
# export PROD_USER="production_user"
# export PROD_PASS="secure_production_password"
# export ANALYTICS_PASSWORD="analytics_secure_pass"
# export ADMIN_PASSWORD_HASH="md5a1b2c3d4e5f6..."
# export DEFAULT_MONGO_HOST="mongodb-cluster.example.com"

# =====================================
# Usage Examples
# =====================================
# 1. Start mongobouncer:
#    ./mongobouncer -config mongobouncer.toml
#
# 2. Connect with mongo shell:
#    mongosh "mongodb://app_user:app_password@localhost:27017/production_app"
#
# 3. View metrics:
#    curl http://localhost:9090/metrics
#
# 4. Health check:
#    curl http://localhost:9090/health

# =====================================
# Production Deployment Notes
# =====================================
# 1. Always use environment variables for passwords in production
# 2. Set appropriate connection limits based on your MongoDB cluster capacity
# 3. Monitor metrics regularly and adjust pool sizes as needed
# 4. Use read replicas for read-heavy workloads
# 5. Configure appropriate timeouts based on your application requirements
# 6. Regularly rotate passwords and update configuration
